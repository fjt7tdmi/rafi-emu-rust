pub fn get_csr_name(index: usize) -> String {
    match index {
        0x000 => "ustatus".to_string(),
        0x001 => "fflags".to_string(),
        0x002 => "frm".to_string(),
        0x003 => "fcsr".to_string(),
        0x004 => "uie".to_string(),
        0x005 => "utvec".to_string(),
        0x040 => "uscratch".to_string(),
        0x041 => "uepc".to_string(),
        0x042 => "ucause".to_string(),
        0x043 => "utval".to_string(),
        0x044 => "uip".to_string(),
        0x100 => "sstatus".to_string(),
        0x102 => "sedeleg".to_string(),
        0x103 => "sideleg".to_string(),
        0x104 => "sie".to_string(),
        0x105 => "stvec".to_string(),
        0x106 => "scounteren".to_string(),
        0x140 => "sscratch".to_string(),
        0x141 => "sepc".to_string(),
        0x142 => "scause".to_string(),
        0x143 => "stval".to_string(),
        0x144 => "sip".to_string(),
        0x180 => "satp".to_string(),
        0x300 => "mstatus".to_string(),
        0x301 => "misa".to_string(),
        0x302 => "medeleg".to_string(),
        0x303 => "mideleg".to_string(),
        0x304 => "mie".to_string(),
        0x305 => "mtvec".to_string(),
        0x306 => "mcounteren".to_string(),
        0x323 => "mhpmevent3".to_string(),
        0x324 => "mhpmevent4".to_string(),
        0x325 => "mhpmevent5".to_string(),
        0x326 => "mhpmevent6".to_string(),
        0x327 => "mhpmevent7".to_string(),
        0x328 => "mhpmevent8".to_string(),
        0x329 => "mhpmevent9".to_string(),
        0x32a => "mhpmevent10".to_string(),
        0x32b => "mhpmevent11".to_string(),
        0x32c => "mhpmevent12".to_string(),
        0x32d => "mhpmevent13".to_string(),
        0x32e => "mhpmevent14".to_string(),
        0x32f => "mhpmevent15".to_string(),
        0x330 => "mhpmevent16".to_string(),
        0x331 => "mhpmevent17".to_string(),
        0x332 => "mhpmevent18".to_string(),
        0x333 => "mhpmevent19".to_string(),
        0x334 => "mhpmevent20".to_string(),
        0x335 => "mhpmevent21".to_string(),
        0x336 => "mhpmevent22".to_string(),
        0x337 => "mhpmevent23".to_string(),
        0x338 => "mhpmevent24".to_string(),
        0x339 => "mhpmevent25".to_string(),
        0x33a => "mhpmevent26".to_string(),
        0x33b => "mhpmevent27".to_string(),
        0x33c => "mhpmevent28".to_string(),
        0x33d => "mhpmevent29".to_string(),
        0x33e => "mhpmevent30".to_string(),
        0x33f => "mhpmevent31".to_string(),
        0x340 => "mscratch".to_string(),
        0x341 => "mepc".to_string(),
        0x342 => "mcause".to_string(),
        0x343 => "mtval".to_string(),
        0x344 => "mip".to_string(),
        0x3a0 => "pmpcfg0".to_string(),
        0x3a1 => "pmpcfg1".to_string(),
        0x3a2 => "pmpcfg2".to_string(),
        0x3a3 => "pmpcfg3".to_string(),
        0x3b0 => "pmpaddr0".to_string(),
        0x3b1 => "pmpaddr1".to_string(),
        0x3b2 => "pmpaddr2".to_string(),
        0x3b3 => "pmpaddr3".to_string(),
        0x3b4 => "pmpaddr4".to_string(),
        0x3b5 => "pmpaddr5".to_string(),
        0x3b6 => "pmpaddr6".to_string(),
        0x3b7 => "pmpaddr7".to_string(),
        0x3b8 => "pmpaddr8".to_string(),
        0x3b9 => "pmpaddr9".to_string(),
        0x3ba => "pmpaddr10".to_string(),
        0x3bb => "pmpaddr11".to_string(),
        0x3bc => "pmpaddr12".to_string(),
        0x3bd => "pmpaddr13".to_string(),
        0x3be => "pmpaddr14".to_string(),
        0x3bf => "pmpaddr15".to_string(),
        0x7a0 => "tselect".to_string(),
        0x7a1 => "tdata1".to_string(),
        0x7a2 => "tdata2".to_string(),
        0x7a3 => "tdata3".to_string(),
        0x7b0 => "dcsr".to_string(),
        0x7b1 => "dpc".to_string(),
        0x7b2 => "dscratch".to_string(),
        0xb00 => "mcycle".to_string(),
        0xb01 => "mtime".to_string(),
        0xb02 => "minstret".to_string(),
        0xb03 => "mhpmcounter3".to_string(),
        0xb04 => "mhpmcounter4".to_string(),
        0xb05 => "mhpmcounter5".to_string(),
        0xb06 => "mhpmcounter6".to_string(),
        0xb07 => "mhpmcounter7".to_string(),
        0xb08 => "mhpmcounter8".to_string(),
        0xb09 => "mhpmcounter9".to_string(),
        0xb0a => "mhpmcounter10".to_string(),
        0xb0b => "mhpmcounter11".to_string(),
        0xb0c => "mhpmcounter12".to_string(),
        0xb0d => "mhpmcounter13".to_string(),
        0xb0e => "mhpmcounter14".to_string(),
        0xb0f => "mhpmcounter15".to_string(),
        0xb10 => "mhpmcounter16".to_string(),
        0xb11 => "mhpmcounter17".to_string(),
        0xb12 => "mhpmcounter18".to_string(),
        0xb13 => "mhpmcounter19".to_string(),
        0xb14 => "mhpmcounter20".to_string(),
        0xb15 => "mhpmcounter21".to_string(),
        0xb16 => "mhpmcounter22".to_string(),
        0xb17 => "mhpmcounter23".to_string(),
        0xb18 => "mhpmcounter24".to_string(),
        0xb19 => "mhpmcounter25".to_string(),
        0xb1a => "mhpmcounter26".to_string(),
        0xb1b => "mhpmcounter27".to_string(),
        0xb1c => "mhpmcounter28".to_string(),
        0xb1d => "mhpmcounter29".to_string(),
        0xb1e => "mhpmcounter30".to_string(),
        0xb1f => "mhpmcounter31".to_string(),
        0xb80 => "mcycleh".to_string(),
        0xb81 => "mtimeh".to_string(),
        0xb82 => "minstreth".to_string(),
        0xb83 => "mhpmcounter3h".to_string(),
        0xb84 => "mhpmcounter4h".to_string(),
        0xb85 => "mhpmcounter5h".to_string(),
        0xb86 => "mhpmcounter6h".to_string(),
        0xb87 => "mhpmcounter7h".to_string(),
        0xb88 => "mhpmcounter8h".to_string(),
        0xb89 => "mhpmcounter9h".to_string(),
        0xb8a => "mhpmcounter10h".to_string(),
        0xb8b => "mhpmcounter11h".to_string(),
        0xb8c => "mhpmcounter12h".to_string(),
        0xb8d => "mhpmcounter13h".to_string(),
        0xb8e => "mhpmcounter14h".to_string(),
        0xb8f => "mhpmcounter15h".to_string(),
        0xb90 => "mhpmcounter16h".to_string(),
        0xb91 => "mhpmcounter17h".to_string(),
        0xb92 => "mhpmcounter18h".to_string(),
        0xb93 => "mhpmcounter19h".to_string(),
        0xb94 => "mhpmcounter20h".to_string(),
        0xb95 => "mhpmcounter21h".to_string(),
        0xb96 => "mhpmcounter22h".to_string(),
        0xb97 => "mhpmcounter23h".to_string(),
        0xb98 => "mhpmcounter24h".to_string(),
        0xb99 => "mhpmcounter25h".to_string(),
        0xb9a => "mhpmcounter26h".to_string(),
        0xb9b => "mhpmcounter27h".to_string(),
        0xb9c => "mhpmcounter28h".to_string(),
        0xb9d => "mhpmcounter29h".to_string(),
        0xb9e => "mhpmcounter39h".to_string(),
        0xb9f => "mhpmcounter31h".to_string(),
        0xc00 => "cycle".to_string(),
        0xc01 => "time".to_string(),
        0xc02 => "instret".to_string(),
        0xc03 => "hpmcounter3".to_string(),
        0xc04 => "hpmcounter4".to_string(),
        0xc05 => "hpmcounter5".to_string(),
        0xc06 => "hpmcounter6".to_string(),
        0xc07 => "hpmcounter7".to_string(),
        0xc08 => "hpmcounter8".to_string(),
        0xc09 => "hpmcounter9".to_string(),
        0xc0a => "hpmcounter10".to_string(),
        0xc0b => "hpmcounter11".to_string(),
        0xc0c => "hpmcounter12".to_string(),
        0xc0d => "hpmcounter13".to_string(),
        0xc0e => "hpmcounter14".to_string(),
        0xc0f => "hpmcounter15".to_string(),
        0xc10 => "hpmcounter16".to_string(),
        0xc11 => "hpmcounter17".to_string(),
        0xc12 => "hpmcounter18".to_string(),
        0xc13 => "hpmcounter19".to_string(),
        0xc14 => "hpmcounter20".to_string(),
        0xc15 => "hpmcounter21".to_string(),
        0xc16 => "hpmcounter22".to_string(),
        0xc17 => "hpmcounter23".to_string(),
        0xc18 => "hpmcounter24".to_string(),
        0xc19 => "hpmcounter25".to_string(),
        0xc1a => "hpmcounter26".to_string(),
        0xc1b => "hpmcounter27".to_string(),
        0xc1c => "hpmcounter28".to_string(),
        0xc1d => "hpmcounter29".to_string(),
        0xc1e => "hpmcounter30".to_string(),
        0xc1f => "hpmcounter31".to_string(),
        0xc80 => "cycleh".to_string(),
        0xc81 => "timeh".to_string(),
        0xc82 => "instreth".to_string(),
        0xc83 => "hpmcounter3h".to_string(),
        0xc84 => "hpmcounter4h".to_string(),
        0xc85 => "hpmcounter5h".to_string(),
        0xc86 => "hpmcounter6h".to_string(),
        0xc87 => "hpmcounter7h".to_string(),
        0xc88 => "hpmcounter8h".to_string(),
        0xc89 => "hpmcounter9h".to_string(),
        0xc8a => "hpmcounter10h".to_string(),
        0xc8b => "hpmcounter11h".to_string(),
        0xc8c => "hpmcounter12h".to_string(),
        0xc8d => "hpmcounter13h".to_string(),
        0xc8e => "hpmcounter14h".to_string(),
        0xc8f => "hpmcounter15h".to_string(),
        0xc90 => "hpmcounter16h".to_string(),
        0xc91 => "hpmcounter17h".to_string(),
        0xc92 => "hpmcounter18h".to_string(),
        0xc93 => "hpmcounter19h".to_string(),
        0xc94 => "hpmcounter20h".to_string(),
        0xc95 => "hpmcounter21h".to_string(),
        0xc96 => "hpmcounter22h".to_string(),
        0xc97 => "hpmcounter23h".to_string(),
        0xc98 => "hpmcounter24h".to_string(),
        0xc99 => "hpmcounter25h".to_string(),
        0xc9a => "hpmcounter26h".to_string(),
        0xc9b => "hpmcounter27h".to_string(),
        0xc9c => "hpmcounter28h".to_string(),
        0xc9d => "hpmcounter29h".to_string(),
        0xc9e => "hpmcounter30h".to_string(),
        0xc9f => "hpmcounter31h".to_string(),
        0xf11 => "mvendorid".to_string(),
        0xf12 => "marchid".to_string(),
        0xf13 => "mimpid".to_string(),
        0xf14 => "mhartid".to_string(),
        _ => "unknown".to_string(),
    }
}

pub fn get_int_reg_name(index: usize) -> String {
    match index {
        0 => "zero".to_string(),
        1 => "ra".to_string(),
        2 => "sp".to_string(),
        3 => "gp".to_string(),
        4 => "tp".to_string(),
        5 => "t0".to_string(),
        6 => "t1".to_string(),
        7 => "t2".to_string(),
        8 => "s0".to_string(),
        9 => "s1".to_string(),
        10 => "a0".to_string(),
        11 => "a1".to_string(),
        12 => "a2".to_string(),
        13 => "a3".to_string(),
        14 => "a4".to_string(),
        15 => "a5".to_string(),
        16 => "a6".to_string(),
        17 => "a7".to_string(),
        18 => "s2".to_string(),
        19 => "s3".to_string(),
        20 => "s4".to_string(),
        21 => "s5".to_string(),
        22 => "s6".to_string(),
        23 => "s7".to_string(),
        24 => "s8".to_string(),
        25 => "s9".to_string(),
        26 => "s10".to_string(),
        27 => "s11".to_string(),
        28 => "t3".to_string(),
        29 => "t4".to_string(),
        30 => "t5".to_string(),
        31 => "t6".to_string(),
        _ => "INVALID".to_string(),
    }
}

pub fn pick(value: &u32, lsb: usize, width: usize) -> u32 {
    (value >> lsb) & ((1 << width) - 1)
}

pub fn sign_extend(count: usize, value: u32) -> u32 {
    if value & (1 << count) != 0 {
        let mask = !((1 << count) - 1);
        return mask | value
    }
    else {
        return value
    }
}

#[test]
fn sext_test() {
    assert_eq!(sign_extend(15, 0x00008888), 0xffff8888);
    assert_eq!(sign_extend(16, 0x00008888), 0x00008888);
}
